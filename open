#!/usr/bin/env bash

# MIT License
# 
# Copyright (c) 2020 Tom Meyers
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
file="$1"

CONF_DIR="$HOME/.cache/tde/"
CONF="$CONF_DIR/open.conf"

[[ ! -f "$CONF" ]] && { mkdir -p "$CONF_DIR" ; touch "$CONF" ; }

# read out the config
source "$CONF"

# FILES_AS_DIR=1 means the --files-as-dir option is enabled


if [[ "$1" == "-h" || "$1" == "--help" ]]; then
  echo "$0 --help | Print this help message"
  echo "$0 --files-as-dir | treath files as directories on the next invocation"
  echo "$0 --reset | treath files and directories differently on the next invocation"
  exit 0
fi

if [[ "$1" == "--files-as-dir" ]]; then
  echo "FILES_AS_DIR=1" > "$CONF"
  exit 0
fi

if [[ "$1" == "--reset" ]]; then
  echo "FILES_AS_DIR=0" > "$CONF"
  exit 0
fi

function open_in_code() {
  # If the insiders version is installed open that one.
  # Otherwise open in normal vscode
  if [[ "$(command -v code-insiders)" ]]; then
    code-insiders "$file" &> /dev/null & exit 0
  elif [[ "$(command -v code)" ]]; then
    code "$file" &> /dev/null & exit 0
  fi
}


ext=$(echo "$file" | awk -F. '{print $NF}')

#if the input is the current directory open it in vs code
if [[ "$file" == "." || -d "$file" ]]; then
    open_in_code
fi

# Open uri's with xdg-open
if [[ ! -f "$file" ]]; then
  exec /usr/bin/xdg-open "$file"
fi

# read the major and minor mimetype
IFS='/' read -r major minor < <(file -ib "$file" 2>/dev/null | cut -d ';' -f 1)

case "$ext" in
    pka) packettracer "$file" &>/dev/null & exit 0;;
esac

if [[ "$FILES_AS_DIR" == "1" ]]; then
  open_in_code
else
  exec /usr/bin/xdg-open "$file"
fi
